# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: deploy

on:
  pull_request:
    branches:
      - "main"

env:
  # チェックアウト
  DEVELOPER_DIR: /Applications/Xcode_16.2.app
  WORKSPACE_DIR: homete.xcodeproj
  BUILD_SCHEME: homete
  TEST_FLIGHT_EXPORT_OPTION_PATH: deploy/config/ExportOptions_TestFlight.plist
  ARCHIVE_PATH: Build/homete
  EXPORT_PATH: Build/app
  SPM_CLONE_PATH: SourcePackages

jobs:
  build:
    # 実行環境はmacosに設定
    runs-on: macos-latest

    steps:
      # fetch-depth の計算
      - run: echo "fetch_depth=$(( commits + 1 ))" >> $GITHUB_ENV
        env:
          commits: ${{ github.event.pull_request.commits }}

      # チェックアウト(リポジトリからソースコードを取得)
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: ${{ env.fetch_depth }}

      # Xcodeの一覧出力
      - name: Show Xcode list
        run: ls /Applications | grep 'Xcode'

      # Xcodeのバージョン選択
      - name: Select Xcode version
        run: sudo xcode-select -s '${{ env.DEVELOPER_DIR }}/Contents/Developer'

      # Xcodeのバージョン出力
      - name: Show Xcode version
        run: xcodebuild -version

      # ASC_API_KEYのファイルを生成
      - name: Setup api key
        run: |
          mkdir -p private_keys
          API_KEY_PATH="private_keys/AuthKey_${APP_STORE_CONNECT_API_KEY_KEY_ID}.p8"
          echo "${{ secrets.ASC_SECRET_KEY }}" | base64 --decode > "$API_KEY_PATH"
          chmod 600 "$API_KEY_PATH"

      # 依存ライブラリ解決
      - name: Xcode Resolve Package Dependencies
        run: set -o pipefail &&
          xcodebuild
          -project "${WORKSPACE_DIR}"
          -scheme "${BUILD_SCHEME}"
          -configuration Release
          -clonedSourcePackagesDirPath SourcePackages
          -skipPackagePluginValidation
          -skipMacroValidation
          -scmProvider xcode
          -resolvePackageDependencies

      # アーカイブ実行
      - name: Archive app
        run: set -o pipefail &&
          xcodebuild
          -clonedSourcePackagesDirPath $SPM_CLONE_PATH
          -configuration Release
          -scheme "${BUILD_SCHEME}"
          -project "${WORKSPACE_DIR}"
          -archivePath "${ARCHIVE_PATH}"
          -authenticationKeyPath "$API_KEY_PATH"
          -authenticationKeyID "${{secrets.ASC_KEY_ID}}"
          -authenticationKeyIssuerID "${{secrets.ASC_ISSUER_ID}}"
          -allowProvisioningUpdates
          CODE_SIGNING_REQUIRED=NO
          CODE_SIGNING_ALLOWED=NO
          clean archive

      # IPAファイルを生成
      - name: Create ipa
        run: set -o pipefail &&
          xcodebuild
          -exportArchive
          -archivePath "${ARCHIVE_PATH}"
          -exportPath "${EXPORT_PATH}"
          -authenticationKeyPath "$API_KEY_PATH"
          -authenticationKeyID "${{secrets.ASC_KEY_ID}}"
          -authenticationKeyIssuerID "${{secrets.ASC_ISSUER_ID}}"
          -allowProvisioningUpdates
          -exportOptionsPlist "${TEST_FLIGHT_EXPORT_OPTION_PATH}"

      # IPAをApp Store Connectへアップロードする
      - name: Upload ipa
        run: |
          chmod -R 777 "${EXPORT_PATH}"
          IPA_PATH=$(find "${EXPORT_PATH}" -name "*.ipa" -print -quit)
          scripts/upload_ipa.sh "$IPA_PATH" "${{secrets.ASC_KEY_ID}}" "${{secrets.ASC_ISSUER_ID}}" "${{secrets.APP_ID_NUMBER}}"
