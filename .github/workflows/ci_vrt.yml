# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: vrt

on:
  pull_request:
    branches:
      - "**"
    paths-ignore:
      - ".github/ISSUE_TEMPLATE/*"
      - ".gitignore"
      - README.md
  workflow_dispatch:

env:
  # チェックアウト
  DEVELOPER_DIR: /Applications/Xcode_26.0.app
  WORKSPACE_DIR: homete.xcodeproj
  BUILD_SCHEME: hometeSnapshotTests
  TEST_PLAN: homete-snapshot-testing
  SPM_CLONE_PATH: SourcePackages
  SPM_PACKAGE_RESOLVED_FILE_PATH: homete.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved
  PROJECT_TOOLS_SPM_PACKAGE_RESOLVED_FILE_PATH: ProjectTools/Package.resolved
  TEST_OUTPUT_PATH: Build/test.xcresult

jobs:
  build:
    # 実行環境はmacosに設定
    runs-on: macos-26

    steps:
      # チェックアウト(リポジトリからソースコードを取得)
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      # Xcodeの一覧出力
      - name: Show Xcode list
        run: ls /Applications | grep 'Xcode'

      # Xcodeのバージョン選択
      - name: Select Xcode version
        run: sudo xcode-select -s '${{ env.DEVELOPER_DIR }}/Contents/Developer'

      # Xcodeのバージョン出力
      - name: Show Xcode version
        run: xcodebuild -version

      # reg-cliのインストール
      - name: Install reg-cli
        run: |
          npm i -g reg-cli

      # SPMのライブラリのキャッシュ
      - name: Cache Swift Packages For Project
        uses: actions/cache@v4.2.2
        with:
          path: SourcePackages
          key: v1-dev-${{ runner.os }}-spm-${{ hashFiles(env.SPM_PACKAGE_RESOLVED_FILE_PATH) }}
          restore-keys: v1-dev-${{ runner.os }}-spm-

      - name: Decode Firebase Api Key
        run: echo "${{ secrets.DEV_FIREBASE_API_KEY_BASE64 }}" | base64 --decode > homete/GoogleService-Info-dev.plist

      - name: Xcode Resolve Package Dependencies
        run: set -o pipefail &&
          xcodebuild
          -project "${WORKSPACE_DIR}"
          -scheme "${BUILD_SCHEME}"
          -configuration Debug
          -clonedSourcePackagesDirPath "${SPM_CLONE_PATH}"
          -skipPackagePluginValidation
          -skipMacroValidation
          -scmProvider xcode
          -resolvePackageDependencies

      # Snapshotの生成
      - name: Generate snapshot
        run: xcodebuild
          -project "${WORKSPACE_DIR}"
          -configuration Debug
          -destination 'platform=iOS Simulator,OS=18.6,name=iPhone 16 Pro'
          -scheme "${BUILD_SCHEME}"
          -testPlan "${TEST_PLAN}"
          -resultBundlePath "${TEST_OUTPUT_PATH}"
          -clonedSourcePackagesDirPath "${SPM_CLONE_PATH}"
          clean test |
          xcbeautify --renderer github-actions

      - name: copy current snapshot test results
        run: |
          mkdir -p Build/VRT/current
          cp -pr hometeSnapshotTests/__Snapshots__/hometeSnapshotTests/* Build/VRT/current

      - name: copy base snapshot test results
        run: |
          git checkout hometeSnapshotTests/__Snapshots__/
          git switch main
          mkdir -p Build/VRT/base
          if [ -d hometeSnapshotTests/__Snapshots__/hometeSnapshotTests ]; then
            cp -pr hometeSnapshotTests/__Snapshots__/hometeSnapshotTests/* Build/VRT/base
          fi

      # VRTの差分を比較
      - name: compare snapshot images
        working-directory: Build/VRT
        run: |
          mkdir -p Build/VRT/diff
          reg-cli current base diff -R report.html

      - name: Upload snapshot comparison result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: snapshot-comparison-result
          path: Build/VRT/report.html
          retention-days: 1
