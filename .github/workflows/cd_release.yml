# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: deploy_app_store

on:
  workflow_call:

env:
  # チェックアウト
  DEVELOPER_DIR: /Applications/Xcode_16.2.app
  WORKSPACE_DIR: homete.xcodeproj
  BUILD_SCHEME: homete
  RELEASE_EXPORT_OPTION_PATH: deploy/config/ExportOptions_Release.plist
  ARCHIVE_PATH: Build/homete.xcarchive
  EXPORT_PATH: Build/app
  SPM_CLONE_PATH: SourcePackages
  SPM_PACKAGE_RESOLVED_FILE_PATH: homete.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved

jobs:
  deploy_app_store:
    # 実行環境はmacosに設定
    runs-on: macos-latest
    env:
      API_KEY_PATH: "private_keys/AuthKey_${{ secrets.ASC_KEY_ID }}.p8"

    steps:
      # fetch-depth の計算
      - run: echo "fetch_depth=$(( commits + 1 ))" >> $GITHUB_ENV
        env:
          commits: ${{ github.event.pull_request.commits }}

      # チェックアウト(リポジトリからソースコードを取得)
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: ${{ env.fetch_depth }}

      # Xcodeの一覧出力
      - name: Show Xcode list
        run: ls /Applications | grep 'Xcode'

      # Xcodeのバージョン選択
      - name: Select Xcode version
        run: sudo xcode-select -s '${{ env.DEVELOPER_DIR }}/Contents/Developer'

      # Xcodeのバージョン出力
      - name: Show Xcode version
        run: xcodebuild -version

      # ASC_API_KEYのファイルを生成
      - name: Setup api key
        run: scripts/create_api_key_file.sh "$API_KEY_PATH" private_keys "${{ secrets.ASC_SECRET_KEY }}"

      # ASC_API_KEYの絶対パスを環境変数へ設定
      - name: Setup env for api key path
        run: echo "API_KEY_ABSOLUTE_PATH=$(pwd)/$API_KEY_PATH" >> $GITHUB_ENV

      # Gemfileの依存ライブラリキャッシュ
      - name: cache bundle directory
        uses: actions/cache@v4.2.2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-${{ hashFiles('Gemfile.lock') }}

      # Gemfileの依存ライブラリインストール
      - name: Install Gemfile lib
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      # SPMのライブラリのキャッシュ
      - name: Cache Swift Packages
        uses: actions/cache@v4.2.2
        with:
          path: SourcePackages
          key: ${{ runner.os }}-spm-${{ hashFiles(env.SPM_PACKAGE_RESOLVED_FILE_PATH) }}
          restore-keys: ${{ runner.os }}-spm-

      # ビルド番号更新
      - name: Increment build number
        run: xcrun agvtool new-version -all ${{ github.run_number }}

      # 依存ライブラリ解決
      - name: Xcode Resolve Package Dependencies
        run: set -o pipefail &&
          xcodebuild
          -project "${WORKSPACE_DIR}"
          -scheme "${BUILD_SCHEME}"
          -configuration Release
          -clonedSourcePackagesDirPath SourcePackages
          -skipPackagePluginValidation
          -skipMacroValidation
          -scmProvider xcode
          -resolvePackageDependencies

      # アーカイブ実行
      - name: Archive app
        run: set -o pipefail &&
          xcodebuild
          -clonedSourcePackagesDirPath $SPM_CLONE_PATH
          -configuration Release
          -scheme "${BUILD_SCHEME}"
          -project "${WORKSPACE_DIR}"
          -archivePath "${ARCHIVE_PATH}"
          -authenticationKeyPath "${{ env.API_KEY_ABSOLUTE_PATH }}"
          -authenticationKeyID "${{ secrets.ASC_KEY_ID }}"
          -authenticationKeyIssuerID "${{ secrets.ASC_ISSUER_ID }}"
          -allowProvisioningUpdates
          CODE_SIGNING_REQUIRED=NO
          CODE_SIGNING_ALLOWED=NO
          clean archive

      # IPAファイルを生成
      - name: Create ipa
        run: set -o pipefail &&
          xcodebuild
          -exportArchive
          -archivePath "${ARCHIVE_PATH}"
          -exportPath "${EXPORT_PATH}"
          -authenticationKeyPath "${{ env.API_KEY_ABSOLUTE_PATH }}"
          -authenticationKeyID "${{ secrets.ASC_KEY_ID }}"
          -authenticationKeyIssuerID "${{ secrets.ASC_ISSUER_ID }}"
          -allowProvisioningUpdates
          -exportOptionsPlist "${RELEASE_EXPORT_OPTION_PATH}"

      # IPAをApp Store Connectへアップロードする
      - name: Upload ipa
        run: |
          chmod -R 777 "${EXPORT_PATH}"
          IPA_PATH=$(find "${EXPORT_PATH}" -name "*.ipa" -print -quit)
          VERSION=$(/usr/libexec/PlistBuddy -c "Print :ApplicationProperties:CFBundleShortVersionString" "${ARCHIVE_PATH}/Info.plist")
          fastlane release \
            asc_key_id:"${{ secrets.ASC_KEY_ID }}" \
            asc_issuer_id:"${{ secrets.ASC_ISSUER_ID }}" \
            asc_key_path:"$API_KEY_PATH" \
            ipa:"$IPA_PATH" \
            app_version:"$VERSION"
