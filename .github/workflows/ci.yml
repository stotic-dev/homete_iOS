# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: build_test

on:
  pull_request:
    branches:
      - "*"
    paths-ignore:
      - ".github/ISSUE_TEMPLATE/*"
      - ".gitignore"
      - README.md
  workflow_dispatch:

env:
  # チェックアウト
  DEVELOPER_DIR: /Applications/Xcode_16.2.app
  WORKSPACE_DIR: homete.xcodeproj
  BUILD_SCHEME: homete
  TEST_PLAN: homete

jobs:
  build:
    # 実行環境はmacosに設定
    runs-on: macos-latest

    steps:
      # fetch-depth の計算
      - run: echo "fetch_depth=$(( commits + 1 ))" >> $GITHUB_ENV
        env:
          commits: ${{ github.event.pull_request.commits }}

      # チェックアウト(リポジトリからソースコードを取得)
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: ${{ env.fetch_depth }}

      # Xcodeの一覧出力
      - name: Show Xcode list
        run: ls /Applications | grep 'Xcode'

      # Xcodeのバージョン選択
      - name: Select Xcode version
        run: sudo xcode-select -s '${{ env.DEVELOPER_DIR }}/Contents/Developer'

      # Xcodeのバージョン出力
      - name: Show Xcode version
        run: xcodebuild -version

      # xcbeautifyをインストール
      - name: Install xcbeautify
        run: brew install xcbeautify

      # ビルド
      - name: Xcode Resolve Package Dependencies
        run: set -o pipefail &&
          xcodebuild \
          -workspace ${WORKSPACE_DIR} \
          -scheme ${BUILD_SCHEME} \
          -configuration Debug \
          -clonedSourcePackagesDirPath SourcePackages \
          -skipPackagePluginValidation \
          -skipMacroValidation \
          -scmProvider xcode \
          -resolvePackageDependencies

      # 単体テストの実行
      - name: Xcode test
        run: set -o pipefail &&
          xcodebuild \
          -workspace ${WORKSPACE_DIR} \
          -configuration Debug \
          -destination 'platform=iOS Simulator,OS=18.1,name=iPhone 16 Pro' \
          -scheme ${BUILD_SCHEME} \
          -testPlan ${TEST_PLAN} \
          -skipPackagePluginValidation \
          -skipMacroValidation \
          -scmProvider xcode \
          -clonedSourcePackagesDirPath SourcePackages \
          clean test |
          xcbeautify --renderer github-actions
